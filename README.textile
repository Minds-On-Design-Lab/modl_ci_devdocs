h1. MOD Lab DevDocs CI Package

DevDocs is a package for "CodeIgniter":http://codeigniter.com that makes documenting your project simple and easy.

DevDocs is:

* A simple way to document your project
* A great way to store simple, easy to read and edit instructions with your project
* A rockin' way to get a new developer up to speed

DevDocs is not:

* A code documentation parser
* A zeppelin

h2. Install

There are two ways to install DevDocs, the simple way and the custom way.

h3. Simple Install

# Copy <code>application/third_party/modl_devdocs</code> to your application's <code>third_party</code> directory.
# Copy <code>application/controllers/devdocs.php</code> to your application's <code>controllers</code> directory.
# Copy <code>www/modl_devdocs</code> to your application's web root
# Write docs, store them as <code>APPPATH/docs/devdocs.textile</code>
# Visit <code>path/to/your/site/index.php/devdocs</code>


h3. Custom install

The custom method is great if you need to control access to the docs. Say, by putting them within an authenticated admin area. First, we need to put the assets in the right place:

# Copy <code>application/third_party/modl_devdocs</code> to your application's <code>third_party</code> directory.
# Copy <code>www/modl_devdocs</code> to your application's web root

Then just load the library and you can control how your docs are used. For example to use the defaults:

<pre>
class My_Controller extends CI_Controller {
	public function __construct() {
		parent::__construct();
		// some authentication or some such
		$this->load->add_package_path(APPPATH.'third_party/modl_devdocs', true);
		$this->load->library('Modl_devdocs');
		$this->modl_devdocs->load();
	}
	public function docs() {
		// load the default view, with the default file
		$this->modl_devdocs->fetch();
	}
}
</pre>

You, could also load the docs and return the output to your own view:

<pre>
	public function docs() {
		$docs = $this->modl_devdocs->load('path/to/docs.textile', false);
		$this->load->view('path/to/my/view.php', array(
			'contents' => $this->modl_devdocs->fetch(0, true)
		));
	}
</pre>

An example view might look like:

<pre>
<div id="docs"><?php echo $contents?></div>
</pre>

If you're creating your own view and you want to support the syntax highlights, make sure to include the <code>_scripts.html</code> partial in your template:

<pre>
...
<div id="docs"><?php echo $contents?></div>
<?php $this->load->view('modl_devdocs/_scripts.html') ?>
...
</pre>

h2. Usage

h3. Pagination

DevDocs can automatically split your docs into pages based on the h1. elements. To pagination your docs, make sure the 'auto_page' config option set set to TRUE. The packaged controller will load your docs automatically, but if you're going with a custom controller, you'll have to pass the page into the fetch method:

<pre>
public function index() {
	$page = 0;
	if( $this->input->get('_dp') ) {
		$page = $this->input->get('_dp');
	}
	$this->modl_devdocs->fetch($page);
}
</pre>

h3. Adding code examples

DevDocs supports syntax highlights via the "SyntaxHighlighter":http://alexgorbatchev.com/SyntaxHighlighter library. In order to get around textile formatting and to ensure proper code highlights, we use a special <code>example</code> tag.

<pre>
<example type="php">
	My_Code_Example {
		public function sweet() {
			echo "Hello World";
		}
	}
</example>
</pre>

h2. MODL_DevDocs Library

h3. load()

*load([path _string_ [force _bool]])*

Load find and processes the textile documentation. Processing code blocks and splitting the docs into pages.

h5. Parameters

* path - _string_ the path to the file. By default looks in <code>APPPATH/docs/devdocs.textile</code>
* force - _bool_ passing TRUE will force DevDocs to reload the cache

h3. fetch()

*fetch([page _int_ [return _bool_ ]])*

Fetch displays the processed documentation. If you are paginating your docs, you can tell it what page to display here.

h5. Parameters

* page - _int_ the page number to show
* return - _bool_ passing TRUE will return the parsed data instead of loading the default view

h5. Return

If you pass the optional second parameter, <code>fetch()</code> returns a string representing the processed docs.


h5. Example

<pre>
// load a specific file and force a cache reload
$this->modl_devdocs->load('path/to/foo.textile', true);
// fetch the second documentation page
$docs = $this->modl_devdocs->fetch(1, true);
echo $docs;
</pre>

h3. get_links()

*get_links()*

Get links returns an array with links to the generated documentation pages

h5. Returns

An array containing anchor tag strings

h5. Example:

<pre>
	<div id="main_toc">
		<div class="panel">
		<ul>
		<?php foreach( $this->modl_devdocs->get_links() as $link ) : ?>
			<li><?php echo $link ?></li>
		<?php endforeach ?>
		</ul>
		</div>
	</div>
	<div id="main_docs">
		<?php echo $contents ?>
	</div>
</pre>

h2. Config Options

|Option|Default|Description|
|enable_cache|TRUE|Caches the generated documents|
|asset_path|modl_devdocs|Relative path to the web assets|
|auto_page|TRUE|Automatically split docs into pages|
|default_name|devdocs|Default name for the documentation file|

h2. Known Bugs

* Empty lines in code examples cause Textile to freak out... working on that

h2. License

Copyright (c) 2012 Minds On Design Lab, Inc.

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
